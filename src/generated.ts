// Generated by @wagmi/cli@1.0.2 on 5/26/2023 at 11:37:53â€¯AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
  Address,
} from 'wagmi';
import { ReadContractResult, WriteContractMode, PrepareWriteContractResult } from 'wagmi/actions';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', type: 'uint8' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', type: 'bool' }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BeefyVault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export const beefyVaultABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  { type: 'event', anonymous: false, inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }], name: 'Initialized' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: false }],
    name: 'NewStratCandidate',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: false }],
    name: 'UpgradeStrat',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'approvalDelay', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'available', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'balance', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'decimals', outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_amount', internalType: 'uint256', type: 'uint256' }],
    name: 'deposit',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'depositAll', outputs: [] },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'earn', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getPricePerFullShare',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_token', internalType: 'address', type: 'address' }],
    name: 'inCaseTokensGetStuck',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_strategy', internalType: 'contract IStrategyV7', type: 'address' },
      { name: '_name', internalType: 'string', type: 'string' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_approvalDelay', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'name', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'owner', outputs: [{ name: '', internalType: 'address', type: 'address' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_implementation', internalType: 'address', type: 'address' }],
    name: 'proposeStrat',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'stratCandidate',
    outputs: [
      { name: 'implementation', internalType: 'address', type: 'address' },
      { name: 'proposedTime', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'strategy',
    outputs: [{ name: '', internalType: 'contract IStrategyV7', type: 'address' }],
  },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'symbol', outputs: [{ name: '', internalType: 'string', type: 'string' }] },
  { stateMutability: 'view', type: 'function', inputs: [], name: 'totalSupply', outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'upgradeStrat', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'want',
    outputs: [{ name: '', internalType: 'contract IERC20Upgradeable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_shares', internalType: 'uint256', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'withdrawAll', outputs: [] },
] as const;

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export const beefyVaultAddress = {
  10: '0x2F0865133CE3dDb78953Fd3B4F6505EF3ADB2107',
} as const;

/**
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export const beefyVaultConfig = { address: beefyVaultAddress, abi: beefyVaultABI } as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<TFunctionName extends string, TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<TFunctionName extends 'allowance', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'allowance', ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<TFunctionName extends 'balanceOf', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'balanceOf', ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<TFunctionName extends 'decimals', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'decimals', ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<TFunctionName extends 'name', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'name', ...config } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<TFunctionName extends 'symbol', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'symbol', ...config } as UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<TFunctionName extends 'totalSupply', TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>, 'abi' | 'functionName'> = {} as any,
) {
  return useContractRead({ abi: erc20ABI, functionName: 'totalSupply', ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<TFunctionName extends string, TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof erc20ABI, string>['request']['abi'], TFunctionName, TMode>
    : UseContractWriteConfig<typeof erc20ABI, TFunctionName, TMode> & {
        abi?: never;
      } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, TFunctionName, TMode>({ abi: erc20ABI, ...config } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof erc20ABI, 'approve'>['request']['abi'], 'approve', TMode> & {
        functionName?: 'approve';
      }
    : UseContractWriteConfig<typeof erc20ABI, 'approve', TMode> & {
        abi?: never;
        functionName?: 'approve';
      } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'approve', TMode>({ abi: erc20ABI, functionName: 'approve', ...config } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof erc20ABI, 'transfer'>['request']['abi'], 'transfer', TMode> & {
        functionName?: 'transfer';
      }
    : UseContractWriteConfig<typeof erc20ABI, 'transfer', TMode> & {
        abi?: never;
        functionName?: 'transfer';
      } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'transfer', TMode>({ abi: erc20ABI, functionName: 'transfer', ...config } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<TMode extends WriteContractMode = undefined>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof erc20ABI, 'transferFrom'>['request']['abi'], 'transferFrom', TMode> & {
        functionName?: 'transferFrom';
      }
    : UseContractWriteConfig<typeof erc20ABI, 'transferFrom', TMode> & {
        abi?: never;
        functionName?: 'transferFrom';
      } = {} as any,
) {
  return useContractWrite<typeof erc20ABI, 'transferFrom', TMode>({ abi: erc20ABI, functionName: 'transferFrom', ...config } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>, 'abi'> = {} as any,
) {
  return usePrepareContractWrite({ abi: erc20ABI, ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>, 'abi' | 'functionName'> = {} as any) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'approve', ...config } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>, 'abi' | 'functionName'> = {} as any,
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transfer', ...config } as UsePrepareContractWriteConfig<
    typeof erc20ABI,
    'transfer'
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>, 'abi' | 'functionName'> = {} as any,
) {
  return usePrepareContractWrite({ abi: erc20ABI, functionName: 'transferFrom', ...config } as UsePrepareContractWriteConfig<
    typeof erc20ABI,
    'transferFrom'
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(config: Omit<UseContractEventConfig<typeof erc20ABI, TEventName>, 'abi'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, ...config } as UseContractEventConfig<typeof erc20ABI, TEventName>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Approval'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Approval', ...config } as UseContractEventConfig<typeof erc20ABI, 'Approval'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(config: Omit<UseContractEventConfig<typeof erc20ABI, 'Transfer'>, 'abi' | 'eventName'> = {} as any) {
  return useContractEvent({ abi: erc20ABI, eventName: 'Transfer', ...config } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultRead<TFunctionName extends string, TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"allowance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultAllowance<TFunctionName extends 'allowance', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'allowance', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"approvalDelay"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultApprovalDelay<
  TFunctionName extends 'approvalDelay',
  TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'approvalDelay', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"available"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultAvailable<TFunctionName extends 'available', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'available', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"balance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultBalance<TFunctionName extends 'balance', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'balance', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultBalanceOf<TFunctionName extends 'balanceOf', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'balanceOf', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"decimals"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultDecimals<TFunctionName extends 'decimals', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'decimals', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"getPricePerFullShare"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultGetPricePerFullShare<
  TFunctionName extends 'getPricePerFullShare',
  TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'getPricePerFullShare',
    ...config,
  } as UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultName<TFunctionName extends 'name', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'name', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultOwner<TFunctionName extends 'owner', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'owner', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"stratCandidate"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultStratCandidate<
  TFunctionName extends 'stratCandidate',
  TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'stratCandidate', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"strategy"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultStrategy<TFunctionName extends 'strategy', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'strategy', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultSymbol<TFunctionName extends 'symbol', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'symbol', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultTotalSupply<TFunctionName extends 'totalSupply', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'totalSupply', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"want"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultWant<TFunctionName extends 'want', TSelectData = ReadContractResult<typeof beefyVaultABI, TFunctionName>>(
  config: Omit<UseContractReadConfig<typeof beefyVaultABI, TFunctionName, TSelectData>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractRead({ abi: beefyVaultABI, address: beefyVaultAddress[10], functionName: 'want', ...config } as UseContractReadConfig<
    typeof beefyVaultABI,
    TFunctionName,
    TSelectData
  >);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof beefyVaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, string>['request']['abi'], TFunctionName, TMode> & {
        address?: Address;
        chainId?: TChainId;
      }
    : UseContractWriteConfig<typeof beefyVaultABI, TFunctionName, TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, TFunctionName, TMode>({ abi: beefyVaultABI, address: beefyVaultAddress[10], ...config } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultApprove<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'approve'>['request']['abi'], 'approve', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'approve';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'approve', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'approve';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'approve', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'approve',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultDecreaseAllowance<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'decreaseAllowance'>['request']['abi'], 'decreaseAllowance', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'decreaseAllowance';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'decreaseAllowance', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'decreaseAllowance';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'decreaseAllowance', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'decreaseAllowance',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"deposit"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultDeposit<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'deposit'>['request']['abi'], 'deposit', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'deposit';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'deposit', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'deposit';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'deposit', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'deposit',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"depositAll"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultDepositAll<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'depositAll'>['request']['abi'], 'depositAll', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'depositAll';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'depositAll', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'depositAll';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'depositAll', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'depositAll',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"earn"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultEarn<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'earn'>['request']['abi'], 'earn', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'earn';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'earn', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'earn';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'earn', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'earn',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"inCaseTokensGetStuck"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultInCaseTokensGetStuck<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof beefyVaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof beefyVaultABI, 'inCaseTokensGetStuck'>['request']['abi'],
        'inCaseTokensGetStuck',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'inCaseTokensGetStuck' }
    : UseContractWriteConfig<typeof beefyVaultABI, 'inCaseTokensGetStuck', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'inCaseTokensGetStuck';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'inCaseTokensGetStuck', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'inCaseTokensGetStuck',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultIncreaseAllowance<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'increaseAllowance'>['request']['abi'], 'increaseAllowance', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'increaseAllowance';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'increaseAllowance', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'increaseAllowance';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'increaseAllowance', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'increaseAllowance',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultInitialize<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'initialize'>['request']['abi'], 'initialize', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'initialize';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'initialize', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'initialize';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'initialize', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'initialize',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"proposeStrat"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultProposeStrat<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'proposeStrat'>['request']['abi'], 'proposeStrat', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'proposeStrat';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'proposeStrat', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'proposeStrat';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'proposeStrat', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'proposeStrat',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultRenounceOwnership<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'renounceOwnership'>['request']['abi'], 'renounceOwnership', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'renounceOwnership', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'renounceOwnership';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'renounceOwnership', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'renounceOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultTransfer<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'transfer'>['request']['abi'], 'transfer', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transfer';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'transfer', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transfer';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'transfer', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transfer',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultTransferFrom<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'transferFrom'>['request']['abi'], 'transferFrom', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transferFrom';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'transferFrom', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transferFrom';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'transferFrom', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transferFrom',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultTransferOwnership<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'transferOwnership'>['request']['abi'], 'transferOwnership', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'transferOwnership', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'transferOwnership';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'transferOwnership', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transferOwnership',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"upgradeStrat"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultUpgradeStrat<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'upgradeStrat'>['request']['abi'], 'upgradeStrat', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'upgradeStrat';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'upgradeStrat', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'upgradeStrat';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'upgradeStrat', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'upgradeStrat',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultWithdraw<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'withdraw'>['request']['abi'], 'withdraw', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'withdraw';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'withdraw', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'withdraw';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'withdraw', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'withdraw',
    ...config,
  } as any);
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"withdrawAll"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultWithdrawAll<TMode extends WriteContractMode = undefined, TChainId extends number = keyof typeof beefyVaultAddress>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<PrepareWriteContractResult<typeof beefyVaultABI, 'withdrawAll'>['request']['abi'], 'withdrawAll', TMode> & {
        address?: Address;
        chainId?: TChainId;
        functionName?: 'withdrawAll';
      }
    : UseContractWriteConfig<typeof beefyVaultABI, 'withdrawAll', TMode> & {
        abi?: never;
        address?: never;
        chainId?: TChainId;
        functionName?: 'withdrawAll';
      } = {} as any,
) {
  return useContractWrite<typeof beefyVaultABI, 'withdrawAll', TMode>({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'withdrawAll',
    ...config,
  } as any);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({ abi: beefyVaultABI, address: beefyVaultAddress[10], ...config } as UsePrepareContractWriteConfig<
    typeof beefyVaultABI,
    TFunctionName
  >);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultApprove(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'approve'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'approve'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultDecreaseAllowance(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'decreaseAllowance'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'decreaseAllowance'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"deposit"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultDeposit(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'deposit'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'deposit'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"depositAll"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultDepositAll(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'depositAll'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'depositAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'depositAll'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"earn"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultEarn(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'earn'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'earn',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'earn'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"inCaseTokensGetStuck"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultInCaseTokensGetStuck(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'inCaseTokensGetStuck'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'inCaseTokensGetStuck',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'inCaseTokensGetStuck'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultIncreaseAllowance(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'increaseAllowance'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'increaseAllowance'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultInitialize(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'initialize'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'initialize'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"proposeStrat"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultProposeStrat(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'proposeStrat'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'proposeStrat',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'proposeStrat'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultRenounceOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'renounceOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'renounceOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultTransfer(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transfer'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transfer'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultTransferFrom(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transferFrom'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transferFrom'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultTransferOwnership(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transferOwnership'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'transferOwnership'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"upgradeStrat"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultUpgradeStrat(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'upgradeStrat'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'upgradeStrat',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'upgradeStrat'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultWithdraw(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'withdraw'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'withdraw'>);
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link beefyVaultABI}__ and `functionName` set to `"withdrawAll"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function usePrepareBeefyVaultWithdrawAll(
  config: Omit<UsePrepareContractWriteConfig<typeof beefyVaultABI, 'withdrawAll'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    functionName: 'withdrawAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof beefyVaultABI, 'withdrawAll'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    TEventName
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultApprovalEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'Approval'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], eventName: 'Approval', ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    'Approval'
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"Initialized"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultInitializedEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'Initialized'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], eventName: 'Initialized', ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    'Initialized'
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"NewStratCandidate"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultNewStratCandidateEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'NewStratCandidate'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], eventName: 'NewStratCandidate', ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    'NewStratCandidate'
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultOwnershipTransferredEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'OwnershipTransferred'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({
    abi: beefyVaultABI,
    address: beefyVaultAddress[10],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof beefyVaultABI, 'OwnershipTransferred'>);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultTransferEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'Transfer'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], eventName: 'Transfer', ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    'Transfer'
  >);
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link beefyVaultABI}__ and `eventName` set to `"UpgradeStrat"`.
 *
 * [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0x2f0865133ce3ddb78953fd3b4f6505ef3adb2107)
 */
export function useBeefyVaultUpgradeStratEvent(
  config: Omit<UseContractEventConfig<typeof beefyVaultABI, 'UpgradeStrat'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof beefyVaultAddress;
  } = {} as any,
) {
  return useContractEvent({ abi: beefyVaultABI, address: beefyVaultAddress[10], eventName: 'UpgradeStrat', ...config } as UseContractEventConfig<
    typeof beefyVaultABI,
    'UpgradeStrat'
  >);
}
